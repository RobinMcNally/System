set-option -g default-shell $SHELL
set-option -g default-terminal screen-256color

set-option -g prefix C-q
set-option -sg escape-time 10

set-option -g base-index 1

set-option -g status-interval 1

set-window-option -g mode-keys vi
set-option -g status-keys vi

set-option -g mouse

set-window-option -g monitor-activity on
set-window-option -g aggressive-resize on

set-option -g clock-mode-style 24

# Messageline
set-option -g message-bg cyan
set-option -g message-fg black
set-option -g message-attr dim

# Statusline
set-option -g status-bg black
set-option -g status-fg default
set-option -g status-attr dim

set-option -g status-left '#{session_name} @ #{host_short} >> '
set-option -g status-left-fg cyan
set-option -g status-left-attr dim
set-option -g status-left-length 50

set-option -g status-justify left

set-window-option -g window-status-format '(#{window_index} #{window_name})'
set-window-option -g window-status-current-format '(#{window_index} #{window_name})'
set-window-option -g window-status-current-fg yellow

set-window-option -g window-status-bell-attr underscore
set-window-option -g window-status-bell-fg red

set-window-option -g window-status-activity-attr none
set-window-option -g window-status-activity-fg green

source-file $XDG_CONFIG_HOME/tmux/expanded-status.conf
source-file $XDG_CONFIG_HOME/tmux/show-clock.conf

# Rebind window management to track working directory.
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind-key r source-file ~/.tmux.conf
bind-key a last-window
bind-key C-a send-prefix
unbind-key C-b
bind-key m set-window-option monitor-activity
bind-key \; command-prompt
bind-key S choose-session # Bump this to make room for ssh:
bind-key s command-prompt -p ssh: "new-window -n '^ %1' 'ssh %1'"
bind-key 0 move-window -r # Renumber windows in order
bind-key X confirm-before -p "kill-window #{window_name}? (y/n)" kill-window
bind-key T clock-mode # Bumped to make room for status clock toggle.

# vim-style directional pane navigation:

#bind-key k select-pane -U
#bind-key j select-pane -D
#bind-key h select-pane -L
#bind-key l select-pane -R

# Smart pane switching with awareness of vim splits:
# (https://github.com/christoomey/vim-tmux-navigator)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Allow clearing the screen with smart pane switching enabled:
bind-key C-l send-keys "C-l"

# Unbind old nav keys to forcibly remap my muscle memory:
unbind-key Left
unbind-key Right
unbind-key Up
unbind-key Down
